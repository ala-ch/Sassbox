// sassbox 0.0.1 
// https://github.com/rekomat/Sassbox.git
// (c) 2015, 2015 ala pixel LLC <http://ala.ch>
// GPL-3.0
// 30.09.2015 22:09

// _type.scss
//
// useful Sass snippets when dealing with type


/// Default value used in mixin `font-smoothing`
///
/// @see {mixin} font-smoothing

$default-font-smoothing: 'sharp' !default; 

/// Mixin to set font-smoothing for optimized font rendering on OS X. 
///
/// **NOTE:** font-smoothing is non-standard and is not on a standards track.
///
/// Defaults to 'sharp' font rendering. Override `$default-font-smoothing`
/// to change the default value.
///
/// - `sharp` triggers font-smoothing `antialiased` (-webkit) or `grayscale` (-moz) which often looks better for bright text on dark backgrounds. 
/// - `none` results in pixelated text (-webkit only)
/// - `strong` represents subpixel-antialiased rendering (browser default)
///
/// @param {string} $font-smoothing [sharp] - `sharp|none|strong`
///
/// @see {variable} $default-font-smoothing
///
/// @link https://developer.mozilla.org/en-US/docs/Web/CSS/font-smooth
/// @link http://maxvoltar.com/sandbox/fontsmoothing/
/// @link http://typerendering.com/
///
/// @author Thanks [Maximilian Hoffmann](https://maximilianhoffmann.com/posts/better-font-rendering-on-osx)

@mixin font-smoothing($font-smoothing: $default-font-smoothing)
{
    @if $font-smoothing == sharp {
        -webkit-font-smoothing: antialiased;
        -moz-osx-font-smoothing: grayscale;
    } @else if $font-smoothing == none {
        -webkit-font-smoothing: none;
    } @else {
        -webkit-font-smoothing: subpixel-antialiased;
        -moz-osx-font-smoothing: auto;
    }
}


